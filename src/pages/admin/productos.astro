---
import Layout_admin from "../../layouts/Layout_admin.astro";
import SectionContainer from "../../components/admin/SectionContainer.astro";
import Aside from "../../components/admin/Aside.astro";
import Header from "../../components/admin/Header.astro";

import { db, product, eq } from "astro:db";

let message = "";
let messageType = "";

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();

  // Handle delete
  if (formData.get("action") === "delete") {
    const productId = formData.get("product_id");
    if (productId) {
      try {
        await db
          .delete(product)
          .where(eq(product.product_id, parseInt(productId as string)));
        message = "Producto eliminado exitosamente";
        messageType = "success";
      } catch (error) {
        message = "Error al eliminar el producto";
        messageType = "error";
      }
    }
    return Astro.redirect("/admin/productos");
  }

  // Handle update
  if (formData.get("action") === "update") {
    const productId = formData.get("product_id");
    const name = formData.get("name");
    const description = formData.get("description");
    const price = formData.get("price");
    const category = formData.get("category");

    if (
      productId &&
      typeof name === "string" &&
      typeof description === "string" &&
      typeof price === "string" &&
      typeof category === "string"
    ) {
      try {
        await db
          .update(product)
          .set({
            name,
            description,
            price: parseFloat(price),
            category,
          })
          .where(eq(product.product_id, parseInt(productId as string)));
        message = "Producto actualizado exitosamente";
        messageType = "success";
      } catch (error) {
        message = "Error al actualizar el producto";
        messageType = "error";
      }
    }
    return Astro.redirect("/admin/productos");
  }

  // Handle insert
  const name = formData.get("name");
  const description = formData.get("description");
  const price = formData.get("price");
  const category = formData.get("category");
  if (
    typeof name === "string" &&
    typeof description === "string" &&
    typeof price === "string" &&
    typeof category === "string"
  ) {
    try {
      await db.insert(product).values({
        name: name,
        description: description,
        price: parseFloat(price),
        category: category,
      });
      message = "Producto creado exitosamente";
      messageType = "success";
    } catch (error) {
      message = "Error al crear el producto";
      messageType = "error";
    }
  }
}

const products = await db.select().from(product);
---

<Layout_admin title="Productos - Agua Máxima">
  <Aside />
  <SectionContainer>
    <Header
      title="Productos"
      description="Gestiona los productos de la plataforma"
    />

    <!-- Mensaje de estado -->
    {
      message && (
        <div
          class={`mb-6 p-4 rounded-lg ${messageType === "success" ? "bg-green-100 text-green-800 border border-green-200" : "bg-red-100 text-red-800 border border-red-200"}`}
        >
          {message}
        </div>
      )
    }

    <div class="mt-8">
      <!-- Botón para agregar nuevo producto -->
      <div class="mb-6 flex justify-between items-center">
        <h2 class="text-2xl font-bold text-gray-900">Lista de Productos</h2>
        <button
          onclick="openModal('createModal')"
          class="bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-6 py-3 rounded-lg font-medium transition-all duration-200 shadow-lg hover:shadow-xl flex items-center gap-2 cursor-pointer"
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          Nuevo Producto
        </button>
      </div>

      <!-- Tabla de productos -->
      <div class="bg-white rounded-xl shadow-lg overflow-hidden">
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gradient-to-r from-blue-50 to-blue-100">
              <tr>
                <th
                  class="px-6 py-4 text-left text-xs font-medium text-blue-800 uppercase tracking-wider"
                  >ID</th
                >
                <th
                  class="px-6 py-4 text-left text-xs font-medium text-blue-800 uppercase tracking-wider"
                  >Nombre</th
                >
                <th
                  class="px-6 py-4 text-left text-xs font-medium text-blue-800 uppercase tracking-wider"
                  >Descripción</th
                >
                <th
                  class="px-6 py-4 text-left text-xs font-medium text-blue-800 uppercase tracking-wider"
                  >Precio</th
                >
                <th
                  class="px-6 py-4 text-left text-xs font-medium text-blue-800 uppercase tracking-wider"
                  >Categoría</th
                >
                <th
                  class="px-6 py-4 text-left text-xs font-medium text-blue-800 uppercase tracking-wider"
                  >Acciones</th
                >
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              {
                products.length === 0 ? (
                  <tr>
                    <td
                      colspan="6"
                      class="px-6 py-12 text-center text-gray-500"
                    >
                      <div class="flex flex-col items-center">
                        <svg
                          class="w-12 h-12 text-gray-300 mb-4"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"
                          />
                        </svg>
                        <p class="text-lg font-medium">
                          No hay productos registrados
                        </p>
                        <p class="text-sm">
                          Comienza agregando tu primer producto
                        </p>
                      </div>
                    </td>
                  </tr>
                ) : (
                  products.map((p) => (
                    <tr class="hover:bg-gray-50 transition-colors duration-150">
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                        #{p.product_id}
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium">
                        {p.name}
                      </td>
                      <td
                        class="px-6 py-4 text-sm text-gray-600 max-w-xs truncate"
                        title={p.description}
                      >
                        {p.description}
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-semibold">
                        ${p.price}
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap">
                        <span class="inline-flex px-3 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800">
                          {p.category}
                        </span>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                        <button
                          onclick={`openEditModal(${p.product_id}, '${p.name}', '${p.description}', '${p.price}', '${p.category}')`}
                          class="text-blue-600 hover:text-blue-800 transition-colors duration-150 p-2 rounded-lg hover:bg-blue-50 cursor-pointer"
                          title="Editar producto"
                        >
                          <svg
                            class="w-4 h-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                          >
                            <path
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                            />
                          </svg>
                        </button>
                        <button
                          onclick={`confirmDelete(${p.product_id}, '${p.name}')`}
                          class="text-red-600 hover:text-red-800 transition-colors duration-150 p-2 rounded-lg hover:bg-red-50 cursor-pointer"
                          title="Eliminar producto"
                        >
                          <svg
                            class="w-4 h-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                          >
                            <path
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
                            />
                          </svg>
                        </button>
                      </td>
                    </tr>
                  ))
                )
              }
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Modal para crear producto -->
    <div
      id="createModal"
      class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden items-center justify-center z-50"
      style="background-color: rgba(0, 0, 0, 0.5);"
    >
      <div
        class="bg-white rounded-xl shadow-2xl w-full max-w-md mx-4 transform transition-all"
      >
        <div
          class="bg-gradient-to-r from-blue-600 to-blue-700 px-6 py-4 rounded-t-xl"
        >
          <h3 class="text-lg font-semibold text-white">Crear Nuevo Producto</h3>
        </div>
        <form method="post" class="p-6 space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Nombre del Producto</label
            >
            <input
              type="text"
              name="name"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              placeholder="Ej: Agua Purificada 20L"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Descripción</label
            >
            <textarea
              name="description"
              required
              rows="3"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none"
              placeholder="Describe las características del producto..."
            ></textarea>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Precio</label
            >
            <input
              type="number"
              name="price"
              required
              step="0.01"
              min="0"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              placeholder="0.00"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Categoría</label
            >
            <select
              name="category"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
            >
              <option value="">Selecciona una categoría</option>
              <option value="Agua Purificada">Agua Purificada</option>
              <option value="Dispensadores">Dispensadores</option>
              <option value="Accesorios">Accesorios</option>
              <option value="Servicios">Servicios</option>
            </select>
          </div>
          <div class="flex gap-3 pt-4">
            <button
              type="button"
              onclick="closeModal('createModal')"
              class="flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium"
            >
              Cancelar
            </button>
            <button
              type="submit"
              class="flex-1 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-4 py-3 rounded-lg font-medium transition-all duration-200"
            >
              Crear Producto
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal para editar producto -->
    <div
      id="editModal"
      class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden items-center justify-center z-50"
      style="background-color: rgba(0, 0, 0, 0.5);"
    >
      <div
        class="bg-white rounded-xl shadow-2xl w-full max-w-md mx-4 transform transition-all"
      >
        <div
          class="bg-gradient-to-r from-blue-600 to-blue-700 px-6 py-4 rounded-t-xl"
        >
          <h3 class="text-lg font-semibold text-white">Editar Producto</h3>
        </div>
        <form method="post" class="p-6 space-y-4">
          <input type="hidden" name="action" value="update" />
          <input type="hidden" name="product_id" id="edit_product_id" />
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Nombre del Producto</label
            >
            <input
              type="text"
              name="name"
              id="edit_name"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Descripción</label
            >
            <textarea
              name="description"
              id="edit_description"
              required
              rows="3"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors resize-none"
            ></textarea>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Precio</label
            >
            <input
              type="number"
              name="price"
              id="edit_price"
              required
              step="0.01"
              min="0"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2"
              >Categoría</label
            >
            <select
              name="category"
              id="edit_category"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
            >
              <option value="">Selecciona una categoría</option>
              <option value="Agua Purificada">Agua Purificada</option>
              <option value="Dispensadores">Dispensadores</option>
              <option value="Accesorios">Accesorios</option>
              <option value="Servicios">Servicios</option>
            </select>
          </div>
          <div class="flex gap-3 pt-4">
            <button
              type="button"
              onclick="closeModal('editModal')"
              class="flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium"
            >
              Cancelar
            </button>
            <button
              type="submit"
              class="flex-1 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-4 py-3 rounded-lg font-medium transition-all duration-200"
            >
              Actualizar
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal de confirmación para eliminar -->
    <div
      id="deleteModal"
      class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden items-center justify-center z-50"
      style="background-color: rgba(0, 0, 0, 0.5);"
    >
      <div
        class="bg-white rounded-xl shadow-2xl w-full max-w-md mx-4 transform transition-all"
      >
        <div
          class="bg-gradient-to-r from-red-600 to-red-700 px-6 py-4 rounded-t-xl"
        >
          <h3 class="text-lg font-semibold text-white">
            Confirmar Eliminación
          </h3>
        </div>
        <div class="p-6">
          <div class="flex items-center mb-4">
            <div class="flex-shrink-0">
              <svg
                class="w-10 h-10 text-red-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"
                ></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-gray-900 font-medium">
                ¿Estás seguro de que deseas eliminar este producto?
              </p>
              <p class="text-gray-600 text-sm mt-1" id="deleteProductName"></p>
              <p class="text-red-600 text-sm mt-2">
                Esta acción no se puede deshacer.
              </p>
            </div>
          </div>
          <form method="post" id="deleteForm">
            <input type="hidden" name="action" value="delete" />
            <input type="hidden" name="product_id" id="delete_product_id" />
            <div class="flex gap-3">
              <button
                type="button"
                onclick="closeModal('deleteModal')"
                class="flex-1 px-4 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium"
              >
                Cancelar
              </button>
              <button
                type="submit"
                class="flex-1 bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white px-4 py-3 rounded-lg font-medium transition-all duration-200"
              >
                Eliminar
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </SectionContainer>

  <script is:inline>
    // Funciones para manejar modales
    function openModal(modalId) {
      const modal = document.getElementById(modalId);
      if (modal) {
        modal.classList.remove("hidden");
        modal.classList.add("flex");
        document.body.style.overflow = "hidden";
      }
    }

    function closeModal(modalId) {
      const modal = document.getElementById(modalId);
      if (modal) {
        modal.classList.add("hidden");
        modal.classList.remove("flex");
        document.body.style.overflow = "auto";
      }
    }

    function openEditModal(id, name, description, price, category) {
      document.getElementById("edit_product_id").value = id;
      document.getElementById("edit_name").value = name;
      document.getElementById("edit_description").value = description;
      document.getElementById("edit_price").value = price;
      document.getElementById("edit_category").value = category;
      openModal("editModal");
    }

    function confirmDelete(id, name) {
      document.getElementById("delete_product_id").value = id;
      document.getElementById("deleteProductName").textContent =
        `Producto: ${name}`;
      openModal("deleteModal");
    }

    // Esperar a que el DOM esté listo
    document.addEventListener("DOMContentLoaded", function () {
      // Cerrar modal al hacer clic fuera de él
      document.addEventListener("click", function (event) {
        const modals = ["createModal", "editModal", "deleteModal"];
        modals.forEach((modalId) => {
          const modal = document.getElementById(modalId);
          if (modal && event.target === modal) {
            closeModal(modalId);
          }
        });
      });

      // Cerrar modal con tecla Escape
      document.addEventListener("keydown", function (event) {
        if (event.key === "Escape") {
          const modals = ["createModal", "editModal", "deleteModal"];
          modals.forEach((modalId) => {
            const modal = document.getElementById(modalId);
            if (modal && !modal.classList.contains("hidden")) {
              closeModal(modalId);
            }
          });
        }
      });
    });
  </script>
</Layout_admin>
